<%
    #'std';

    using System.Net.Mime;

    var html;
    var plain;
    var xml;
    var binary;
    var json;

    @{
        
    }();
    @ ?| (func, defaultValue) { try ret func(); catch ret defaultValue };
    @ ?> (func, defaultValue) @{ try ret func($_); catch ret defaultValue };
    @ <! (func) func ?> false;
    @ <! (source, func) $args.Count == 2 ? (source -? (<! func)) : source ?> false;
    var asm = load System;
    var mediaType = asm.GetType('System.Net.Mime.MediaTypeNames');
    
    mediaType
        .GetMembers()
        <! @.IsNested
        -<@() $_.GetFields()
        ->@() this.{$_.Name.ToLower()} = @{
            contentType = $_.GetValue(null);
            content = $_;
        };

    
    contentType = MediaTypeNames.Text.Xml;
    content = '
        <foo></foo>
    ';
    fib = @(n) n < 2 ? n : fib(n - 1) + fib(n - 2);
    
    if (query.x defined)
        session.x = query.x;
    else if (session.x defined)
        query.x = session.x;
%>
<html>
<head>
    <title>Fibonacci Numbers</title>
</head>
    <body>
        <form method="get">
            <label for="x">Numbers 2: </label>
            <input name="x" value="<%= query.x defined ? query.x : '' %>" />
            <input type="submit" />
        </form>
        <% if (query.x defined) {
            %> Printing <%= query.x %> fibonacci numbers<br /> <%
            
            try {
                x = num(query.x);

                if (x > 20) {
                    %> Error: cannot create more than 20 numbers. <%
                } else {                        
                    (0..x)->fib->@(x) { %>
                        <%= x %><br />
                    <% };
                }
            } catch(e) {
                %> Error: <%= e %> <%
            }
        } %>
    </body>
</html>