#'std';
#'package.base';

_f = macro(@(fmt) { fmt :: [ $_ ] });

l = @() [ _f('Components.Aphid\\Library\\{0}.alx'), _f('Library\\{0}.alx') ];
s = @() [ _f('Aphid\\Samples\\{0}'), _f('Samples\\{0}') ];

////////////////////////////////////////////////////////////////
package({
    name: 'Aphid',
    config: 'Debug',
    root: '..',
    mainModule: 'Aphid\\bin\\{config}\\Aphid.exe',
    files: [
        'Aphid\\bin\\{config}\\Aphid.pdb',
        'AphidUI\\bin\\{config}\\AphidUI.exe',
        'AphidUI\\bin\\{config}\\AphidUI.pdb',
        'Components.Aphid\\bin\\{config}\\Components.Aphid.dll',
        'Components.Aphid\\bin\\{config}\\Components.Aphid.pdb',
        [ 'AphidHdl\\bin\\{config}\\av.exe', 'AphidHdl\\av.exe' ],
        [ 'AphidHdl\\bin\\{config}\\av.pdb', 'AphidHdl\\av.pdb' ],
        [ 'Coywolf\\bin\\{config}\\cw.exe', 'Aphid2Php\\cw.exe' ],
        [ 'Coywolf\\bin\\{config}\\cw.pdb', 'Aphid2Php\\cw.pdb' ],
        [ 'Boxelder\\bin\\{config}\\be.exe', 'Aphid2Python\\be.exe' ],
        [ 'Boxelder\\bin\\{config}\\be.pdb', 'Aphid2Python\\be.pdb' ],
        [ 'Components.Aphid\\bin\\{config}\\Components.Aphid.dll', 'AphidHdl\\Components.Aphid.dll' ],
        [ 'Components.Aphid\\bin\\{config}\\Components.Aphid.dll', 'Aphid2Php\\Components.Aphid.dll' ],
        [ 'Components.Aphid\\bin\\{config}\\Components.Aphid.dll', 'Aphid2Python\\Components.Aphid.dll' ],
        [ 'Components.Aphid\\bin\\{config}\\Components.Aphid.pdb', 'AphidHdl\\Components.Aphid.pdb' ],
        [ 'Components.Aphid\\bin\\{config}\\Components.Aphid.pdb', 'Aphid2Php\\Components.Aphid.pdb' ],
        [ 'Components.Aphid\\bin\\{config}\\Components.Aphid.pdb', 'Aphid2Python\\Components.Aphid.pdb' ],
        l('Benchmark'),
        l('Conversion'),
        l('Dbg'),
        l('DebugDeploy'),
        l('Env'),
        l('IL'),
        l('IO'),
        l('Ipc'),
        l('List'),
        l('Meta'),
        l('NativeDebugging'),
        l('PowerShell'),
        l('Process'),
        l('Query'),
        l('RemoteShell'),
        l('Remoting'),
        l('Sandbox'),
        l('Serialization'),
        l('Shell'),
        l('Std'),
        l('String'),
        l('StringEmitter'),
        l('Tcp'),
        l('Threading'),
        l('Udp'),
        l('Web'),
        l('Wmi'),
        l('Wpf'),
        l('Xml'),
        s("AbstractSyntaxTreeExample.alx"),
        s("ConditionalOperatorExample.alx"),
        s("CustomOperatorExample.alx"),
        s("FibonacciExample.alx"),
        s("FunctionExample.alx"),
        s("HelloWorld.alx"),
        s("ILExample.alx"),
        s("ILMerge.alx"),
        s("InteropExample.alx"),
        s("LambdaExample.alx"),
        s("MacroExample.alx"),
        s("MakeExe.alx"),
        s("NativeDebuggerExample.alx"),
        s("ParallelForExample.alx"),
        s("PartialFunctionExample.alx"),
        s("PatternMatchingExample.alx"),
        s("PipeliningExample.alx"),
        s("RuntimeErrorExample.alx"),
        s("TcpExample.alx"),
        s("TestLoop.alx"),
        s("TextDocumentExample.alxt"),
        s("VbsExample.alx"),
    ]
});