select = @(selector, source) {
    x = [];
    for (y in source) y |> selector @array_push(x);
    ret x;
};

where = @(predicate, source) {
    x = [];
    for (element in source) if (predicate(element)) array_push(x, element);
    ret x;
};

ofType = @(type, source) source @where(@(x) is_a(x, type));

first = @(predicate, source) {
    for (element in source) if (predicate(element)) ret element;
    ret null;
};

skip = @(c, source) {
    x = []; i = 0;
    for (y in source) {
        if (i >= c) array_push(x, y);
        i++;
    }
    ret x;
};

aggr = @(acc, source) {
    if (count(source) == 1) ret source[0];
    else {
        s = source[0];
        for (x in source @skip(1)) s = acc(s, x);
        ret s;
    }
};

concat = @(separator, source) source |> @aggr(@(x, y) x + separator + y);

iter = @(action, source) {
    for (x in source) action(x);
};
