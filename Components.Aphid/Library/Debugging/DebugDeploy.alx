@{
    #'IO';
    using System;
    using System.IO;
    using System.Reflection;
    using Components.External.ConsolePlus;
    var dv = deployVerbosity defined ? deployVerbosity : 1;
    // cls();
    var _print = dv != 0 ? Cli.WriteLine : @{};
    //_print = @{};
    var scriptDir = (new FileInfo(Assembly.GetExecutingAssembly().Location)).Directory;
    var dir = scriptDir;

    if (aphidSource defined) dir = new DirectoryInfo(aphidSource);

    dir @_print('Script dir: ~Green~{0}~R~');
    var libDir;
    var libDirTmp;

    do
    {
        libDirTmp = dir.FullName \ 'Components.Aphid' \ 'Library';

        if (dv > 1) {
            libDirTmp @_print('Checking dir: ~Cyan~{0}~R~');
        }

        if (libDirTmp \ 'Std.alx' |> File.Exists) {
            libDir = libDirTmp;
        }

    } while ((dir = dir.Parent) != null);

    if (libDir == null) {
        _print('~Yellow~Could not find library dir~R~');
        exit(0);
    }

    _print('Found lib dir: ~Green~{0}~R~', libDir);
    _print('[~Green~+~R~] Updating standard headers');

    Directory.GetFiles(libDir, '*.alx')->@ (src){
        var srcFilename = src |> Path.GetFileName;
        var dst = scriptDir.FullName \ 'Library' \ srcFilename;

        if (dv > 1) {
            _print('Copying ~Cyan~{0}~R~ to ~Cyan~{1}~R~', src, dst);
        } else if (dv == 1) {
            _print('Copying ~Cyan~{0}~R~', srcFilename);
        }

        File.Copy(src, dst, true);
    };

    _print();
}();