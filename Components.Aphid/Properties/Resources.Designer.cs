//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Components.Aphid.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Components.Aphid.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var index = lastIndex + 1;
        ///var lexeme = text.Substring(index, charIndex - lastIndex);
        ///
        ///tokens.Add(new {Token}(tokenType, lexeme, index));
        ///.
        /// </summary>
        public static string AddTokenTemplate {
            get {
                return ResourceManager.GetString("AddTokenTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{Cases}}
        ///    {{States}}
        ///    {{Body}}.
        /// </summary>
        public static string CaseTemplate {
            get {
                return ResourceManager.GetString("CaseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] Lang_CSharp {
            get {
                object obj = ResourceManager.GetObject("Lang_CSharp", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //------------------------------------------------------------------------------
        ///// &lt;auto-generated&gt;
        /////     This code was generated by llex.
        ///// &lt;/auto-generated&gt;
        /////------------------------------------------------------------------------------
        ///
        ///#pragma warning disable 0162
        ///
        ///namespace {LexerNamespace}
        ///{
        ///    using System;
        ///    using System.Collections.Generic;
        ///
        ///    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(&quot;llex&quot;, &quot;1&quot;)]
        ///    public enum {TokenType} : short
        ///    {
        ///        {Enums}
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LexicalAnalyzerTemplate {
            get {
                return ResourceManager.GetString("LexicalAnalyzerTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if (charIndex &lt; lastIndex)
        ///{
        ///    currentChar = text[++charIndex];
        ///
        ///    switch (currentChar)
        ///    {
        ///        {{States}}
        ///    }
        ///
        ///    return {TokenType}.Unknown;
        ///}.
        /// </summary>
        public static string RootStateTemplate {
            get {
                return ResourceManager.GetString("RootStateTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if (charIndex &lt; lastIndex)
        ///{
        ///    currentChar = text[++charIndex];
        ///
        ///    switch (currentChar)
        ///    {
        ///        {{States}}
        ///    }
        ///
        ///    PreviousChar();
        ///}.
        /// </summary>
        public static string StateTemplate {
            get {
                return ResourceManager.GetString("StateTemplate", resourceCulture);
            }
        }
    }
}
