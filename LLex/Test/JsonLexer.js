//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by llex.
// </auto-generated>
//------------------------------------------------------------------------------

Components = {};
Components.Json = {};
Components.Json.JsonTokenType = {
    None: 0,
    ColonOperator: 1,
    Comma: 2,
    Comment: 3,
    EndOfFile: 4,
    falseKeyword: 5,
    HexNumber: 6,
    Identifier: 7,
    LeftBrace: 8,
    LeftBracket: 9,
    LeftParenthesis: 10,
    MinusOperator: 11,
    nullKeyword: 12,
    Number: 13,
    RightBrace: 14,
    RightBracket: 15,
    RightParenthesis: 16,
    String: 17,
    trueKeyword: 18,
    Unknown: 19,
    WhiteSpace: 20
};

Components.Json.JsonTokenTypeNames = [
    'None',
    'ColonOperator',
    'Comma',
    'Comment',
    'EndOfFile',
    'falseKeyword',
    'HexNumber',
    'Identifier',
    'LeftBrace',
    'LeftBracket',
    'LeftParenthesis',
    'MinusOperator',
    'nullKeyword',
    'Number',
    'RightBrace',
    'RightBracket',
    'RightParenthesis',
    'String',
    'trueKeyword',
    'Unknown',
    'WhiteSpace',
];

Components.Json.JsonToken = function(TokenType, Lexeme, Index) {
    this.TokenType = TokenType;
    this.Lexeme = Lexeme;
    this.Index = Index;
};

Components.Json.JsonToken.prototype.ToString = function() {
    s = '[';
    s += this.Index;
    s += '] ';
    s += Components.Json.JsonTokenTypeNames[this.TokenType];
    s += ': ';
    s += this.Lexeme;

    return s;
};

Components.Json.JsonToken.prototype.IsKeyword = function() {
    return this.TokenType == Components.Json.JsonTokenType.trueKeyword ||
        this.TokenType == Components.Json.JsonTokenType.falseKeyword ||
        this.TokenType == Components.Json.JsonTokenType.nullKeyword;
};

Components.Json.JsonLexer = function(Text) {
    this.lastIndex = -1;
    this.charIndex = -1;
    this.mode = 0;
    this.state = 0;
    this.currentChar = 0;
    this.SetText(Text);
};

Components.Json.JsonLexer.prototype.SetText = function(Text) {
    this.Text = Text;
    this.lastIndex = this.Text.length - 1;
};

Components.Json.JsonLexer.prototype.NextChar = function() {
    if (this.charIndex < this.lastIndex)
    {
        this.currentChar = this.Text[++this.charIndex];
        return true;
    }

    return false;
};

Components.Json.JsonLexer.prototype.GetToken = function() {
    if (this.mode == 0)
    {
        if (this.charIndex < this.lastIndex)
        {
            this.currentChar = this.Text[++this.charIndex];

            switch (this.currentChar)
            {
                case ',':

                    return Components.Json.JsonTokenType.Comma;

                case ':':

                    return Components.Json.JsonTokenType.ColonOperator;

                case '(':

                    return Components.Json.JsonTokenType.LeftParenthesis;

                case ')':

                    return Components.Json.JsonTokenType.RightParenthesis;

                case '[':

                    return Components.Json.JsonTokenType.LeftBracket;

                case ']':

                    return Components.Json.JsonTokenType.RightBracket;

                case '{':

                    return Components.Json.JsonTokenType.LeftBrace;

                case '}':

                    return Components.Json.JsonTokenType.RightBrace;

                case '-':

                    return Components.Json.JsonTokenType.MinusOperator;

                case '\x0d':

                    return Components.Json.JsonTokenType.WhiteSpace;

                case '\x0a':

                    return Components.Json.JsonTokenType.WhiteSpace;

                case '\x09':

                    return Components.Json.JsonTokenType.WhiteSpace;

                case '\x0b':

                    return Components.Json.JsonTokenType.WhiteSpace;

                case ' ':

                    return Components.Json.JsonTokenType.WhiteSpace;

                case '0':
                    if (this.charIndex < this.lastIndex)
                    {
                        this.currentChar = this.Text[++this.charIndex];

                        switch (this.currentChar)
                        {
                            case 'x':


                                this.currentChar = this.Text[++this.charIndex];
                                this.state = 0;

                                do
                                {
                                    if ((this.state == 0 || this.state == 1) &&
                                        ((this.currentChar > '/' && this.currentChar < ':') ||
                                        ('@' < this.currentChar && this.currentChar < 'G') ||
                                        ('`' < this.currentChar && this.currentChar < 'g')))
                                        this.state = 1;
                                    else if (this.state == 1)
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.HexNumber;
                                    }
                                    else
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Unknown;
                                    }
                                }
                                while (this.NextChar());

                                break;

                        }

                        this.charIndex--;
                    }

                    this.state = 0;

                    do
                    {
                        if ((this.state == 0 || this.state == 1) && this.currentChar > '/' && this.currentChar < ':')
                            this.state = 1;
                        else if (this.state == 1 && this.currentChar == '.')
                            this.state = 2;
                        else if (this.state == 2 || this.state == 3 && this.currentChar > '/' && this.currentChar < ':')
                            this.state = 3;
                        else if ((this.state == 1 || this.state == 3) && (this.currentChar == 'E' || this.currentChar == 'e'))
                        {
                            this.state = 4;
                        }
                        else if (this.state == 4 && (this.currentChar == '-' || this.currentChar == '+'))
                        {
                            this.state = 6;
                        }
                        else if (this.state == 4 && this.currentChar > '/' && this.currentChar < ':')
                        {
                            this.state = 5;
                        }
                        else if (this.state == 5 && this.currentChar > '/' && this.currentChar < ':')
                        {
                            continue;
                        }
                        else if (this.state == 6)
                        {
                            if (this.currentChar > '/' && this.currentChar < ':')
                            {
                                this.state = 5;
                                continue;
                            }
                            else
                            {
                                return Components.Json.JsonTokenType.Unknown;
                            }
                        }
                        else if (this.state == 1 || this.state == 3 || this.state == 5)
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Number;
                        }
                        else
                        {
                            break;
                        }
                    }
                    while (this.NextChar());

                    return Components.Json.JsonTokenType.Number;

                    break;

                case '"':


                    var escaped = false;

                    while (this.NextChar())
                    {
                        if (!escaped && this.currentChar == '"')
                            return Components.Json.JsonTokenType.String;

                        escaped = !escaped && this.currentChar == '\\';
                    }

                    return Components.Json.JsonTokenType.String;

                    break;

                case '\'':


                    var escaped = false;

                    while (this.NextChar())
                    {
                        if (!escaped && this.currentChar == '\'')
                            return Components.Json.JsonTokenType.String;

                        escaped = !escaped && this.currentChar == '\\';
                    }

                    return Components.Json.JsonTokenType.String;

                    break;

                case '/':
                    if (this.charIndex < this.lastIndex)
                    {
                        this.currentChar = this.Text[++this.charIndex];

                        switch (this.currentChar)
                        {
                            case '/':


                                this.state = 0;
                                while (this.NextChar())
                                {
                                    if (this.currentChar == '\r' || this.currentChar == '\n')
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Comment;
                                    }
                                    else if (this.currentChar == '?')
                                    {
                                        this.state = 1;
                                    }
                                    else if (this.state == 1 && this.currentChar == '>')
                                    {
                                        this.charIndex -= 2;

                                        return Components.Json.JsonTokenType.Comment;
                                    }
                                    else
                                    {
                                        this.state = 0;
                                    }
                                }

                                return Components.Json.JsonTokenType.Comment;

                                break;

                            case '*':


                                this.state = 0;

                                while (this.NextChar())
                                {
                                    if ((this.state == 0 || this.state == 1) && this.currentChar == '*')
                                        this.state = 1;
                                    else if (this.state == 1 && this.currentChar == '/')
                                        return Components.Json.JsonTokenType.Comment;
                                    else
                                        this.state = 0;
                                }

                                return Components.Json.JsonTokenType.Comment;

                                break;

                        }

                        this.charIndex--;
                    }
                    return Components.Json.JsonTokenType.Unknown;

                case 't':
                    if (this.charIndex < this.lastIndex)
                    {
                        this.currentChar = this.Text[++this.charIndex];

                        switch (this.currentChar)
                        {
                            case 'r':
                                if (this.charIndex < this.lastIndex)
                                {
                                    this.currentChar = this.Text[++this.charIndex];

                                    switch (this.currentChar)
                                    {
                                        case 'u':
                                            if (this.charIndex < this.lastIndex)
                                            {
                                                this.currentChar = this.Text[++this.charIndex];

                                                switch (this.currentChar)
                                                {
                                                    case 'e':


                                                        this.NextChar();
                                                        this.state = 0;

                                                        do
                                                        {
                                                            if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                                (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                                (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                                this.currentChar == '_' ||
                                                                (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                            {
                                                                this.state = 1;
                                                            }
                                                            else if (this.state == 1)
                                                            {
                                                                this.charIndex--;

                                                                return Components.Json.JsonTokenType.Identifier;
                                                            }
                                                            else
                                                            {
                                                                this.charIndex--;

                                                                return Components.Json.JsonTokenType.trueKeyword;
                                                            }
                                                        }
                                                        while (this.NextChar());

                                                        break;

                                                }

                                                this.charIndex--;
                                            }

                                            this.NextChar();
                                            this.state = 0;

                                            do
                                            {
                                                if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                    (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                    (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                    this.currentChar == '_' ||
                                                    (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                {
                                                    this.state = 1;
                                                }
                                                else if (this.state == 1)
                                                {
                                                    this.charIndex--;

                                                    return Components.Json.JsonTokenType.Identifier;
                                                }
                                                else
                                                {
                                                    this.charIndex--;

                                                    return Components.Json.JsonTokenType.Identifier;
                                                }
                                            }
                                            while (this.NextChar());

                                            break;

                                    }

                                    this.charIndex--;
                                }

                                this.NextChar();
                                this.state = 0;

                                do
                                {
                                    if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                        (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                        (this.currentChar >= '0' && this.currentChar <= '9') ||
                                        this.currentChar == '_' ||
                                        (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                    {
                                        this.state = 1;
                                    }
                                    else if (this.state == 1)
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Identifier;
                                    }
                                    else
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Identifier;
                                    }
                                }
                                while (this.NextChar());

                                break;

                        }

                        this.charIndex--;
                    }

                    this.NextChar();
                    this.state = 0;

                    do
                    {
                        if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                            (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                            (this.currentChar >= '0' && this.currentChar <= '9') ||
                            this.currentChar == '_' ||
                            (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                        {
                            this.state = 1;
                        }
                        else if (this.state == 1)
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                        else
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                    }
                    while (this.NextChar());

                    break;

                case 'f':
                    if (this.charIndex < this.lastIndex)
                    {
                        this.currentChar = this.Text[++this.charIndex];

                        switch (this.currentChar)
                        {
                            case 'a':
                                if (this.charIndex < this.lastIndex)
                                {
                                    this.currentChar = this.Text[++this.charIndex];

                                    switch (this.currentChar)
                                    {
                                        case 'l':
                                            if (this.charIndex < this.lastIndex)
                                            {
                                                this.currentChar = this.Text[++this.charIndex];

                                                switch (this.currentChar)
                                                {
                                                    case 's':
                                                        if (this.charIndex < this.lastIndex)
                                                        {
                                                            this.currentChar = this.Text[++this.charIndex];

                                                            switch (this.currentChar)
                                                            {
                                                                case 'e':


                                                                    this.NextChar();
                                                                    this.state = 0;

                                                                    do
                                                                    {
                                                                        if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                                            (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                                            (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                                            this.currentChar == '_' ||
                                                                            (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                                        {
                                                                            this.state = 1;
                                                                        }
                                                                        else if (this.state == 1)
                                                                        {
                                                                            this.charIndex--;

                                                                            return Components.Json.JsonTokenType.Identifier;
                                                                        }
                                                                        else
                                                                        {
                                                                            this.charIndex--;

                                                                            return Components.Json.JsonTokenType.falseKeyword;
                                                                        }
                                                                    }
                                                                    while (this.NextChar());

                                                                    break;

                                                            }

                                                            this.charIndex--;
                                                        }

                                                        this.NextChar();
                                                        this.state = 0;

                                                        do
                                                        {
                                                            if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                                (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                                (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                                this.currentChar == '_' ||
                                                                (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                            {
                                                                this.state = 1;
                                                            }
                                                            else if (this.state == 1)
                                                            {
                                                                this.charIndex--;

                                                                return Components.Json.JsonTokenType.Identifier;
                                                            }
                                                            else
                                                            {
                                                                this.charIndex--;

                                                                return Components.Json.JsonTokenType.Identifier;
                                                            }
                                                        }
                                                        while (this.NextChar());

                                                        break;

                                                }

                                                this.charIndex--;
                                            }

                                            this.NextChar();
                                            this.state = 0;

                                            do
                                            {
                                                if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                    (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                    (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                    this.currentChar == '_' ||
                                                    (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                {
                                                    this.state = 1;
                                                }
                                                else if (this.state == 1)
                                                {
                                                    this.charIndex--;

                                                    return Components.Json.JsonTokenType.Identifier;
                                                }
                                                else
                                                {
                                                    this.charIndex--;

                                                    return Components.Json.JsonTokenType.Identifier;
                                                }
                                            }
                                            while (this.NextChar());

                                            break;

                                    }

                                    this.charIndex--;
                                }

                                this.NextChar();
                                this.state = 0;

                                do
                                {
                                    if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                        (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                        (this.currentChar >= '0' && this.currentChar <= '9') ||
                                        this.currentChar == '_' ||
                                        (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                    {
                                        this.state = 1;
                                    }
                                    else if (this.state == 1)
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Identifier;
                                    }
                                    else
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Identifier;
                                    }
                                }
                                while (this.NextChar());

                                break;

                        }

                        this.charIndex--;
                    }

                    this.NextChar();
                    this.state = 0;

                    do
                    {
                        if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                            (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                            (this.currentChar >= '0' && this.currentChar <= '9') ||
                            this.currentChar == '_' ||
                            (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                        {
                            this.state = 1;
                        }
                        else if (this.state == 1)
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                        else
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                    }
                    while (this.NextChar());

                    break;

                case 'n':
                    if (this.charIndex < this.lastIndex)
                    {
                        this.currentChar = this.Text[++this.charIndex];

                        switch (this.currentChar)
                        {
                            case 'u':
                                if (this.charIndex < this.lastIndex)
                                {
                                    this.currentChar = this.Text[++this.charIndex];

                                    switch (this.currentChar)
                                    {
                                        case 'l':
                                            if (this.charIndex < this.lastIndex)
                                            {
                                                this.currentChar = this.Text[++this.charIndex];

                                                switch (this.currentChar)
                                                {
                                                    case 'l':


                                                        this.NextChar();
                                                        this.state = 0;

                                                        do
                                                        {
                                                            if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                                (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                                (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                                this.currentChar == '_' ||
                                                                (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                            {
                                                                this.state = 1;
                                                            }
                                                            else if (this.state == 1)
                                                            {
                                                                this.charIndex--;

                                                                return Components.Json.JsonTokenType.Identifier;
                                                            }
                                                            else
                                                            {
                                                                this.charIndex--;

                                                                return Components.Json.JsonTokenType.nullKeyword;
                                                            }
                                                        }
                                                        while (this.NextChar());

                                                        break;

                                                }

                                                this.charIndex--;
                                            }

                                            this.NextChar();
                                            this.state = 0;

                                            do
                                            {
                                                if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                                    (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                                    (this.currentChar >= '0' && this.currentChar <= '9') ||
                                                    this.currentChar == '_' ||
                                                    (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                                {
                                                    this.state = 1;
                                                }
                                                else if (this.state == 1)
                                                {
                                                    this.charIndex--;

                                                    return Components.Json.JsonTokenType.Identifier;
                                                }
                                                else
                                                {
                                                    this.charIndex--;

                                                    return Components.Json.JsonTokenType.Identifier;
                                                }
                                            }
                                            while (this.NextChar());

                                            break;

                                    }

                                    this.charIndex--;
                                }

                                this.NextChar();
                                this.state = 0;

                                do
                                {
                                    if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                                        (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                                        (this.currentChar >= '0' && this.currentChar <= '9') ||
                                        this.currentChar == '_' ||
                                        (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                                    {
                                        this.state = 1;
                                    }
                                    else if (this.state == 1)
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Identifier;
                                    }
                                    else
                                    {
                                        this.charIndex--;

                                        return Components.Json.JsonTokenType.Identifier;
                                    }
                                }
                                while (this.NextChar());

                                break;

                        }

                        this.charIndex--;
                    }

                    this.NextChar();
                    this.state = 0;

                    do
                    {
                        if (((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                            (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                            (this.currentChar >= '0' && this.currentChar <= '9') ||
                            this.currentChar == '_' ||
                            (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                        {
                            this.state = 1;
                        }
                        else if (this.state == 1)
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                        else
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                    }
                    while (this.NextChar());

                    break;

                default:

                    this.state = 0;

                    do
                    {
                        if (this.state == 0 &&
                            ((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                            (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                            this.currentChar == '_' ||
                            (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                            this.state = 1;
                        else if (this.state == 1 &&
                            ((this.currentChar >= 'a' && this.currentChar <= 'z') ||
                            (this.currentChar >= 'A' && this.currentChar <= 'Z') ||
                            (this.currentChar >= '0' && this.currentChar <= '9') ||
                            this.currentChar == '_' ||
                            (this.currentChar >= '\u007f' && this.currentChar <= '\uffff')))
                            this.state = 1;
                        else if (this.state == 1 || this.state == 2)
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Identifier;
                        }
                        else
                        {
                            break;
                        }
                    }
                    while (this.NextChar());


                    this.state = 0;

                    do
                    {
                        if ((this.state == 0 || this.state == 1) && this.currentChar > '/' && this.currentChar < ':')
                            this.state = 1;
                        else if (this.state == 1 && this.currentChar == '.')
                            this.state = 2;
                        else if (this.state == 2 || this.state == 3 && this.currentChar > '/' && this.currentChar < ':')
                            this.state = 3;
                        else if ((this.state == 1 || this.state == 3) && (this.currentChar == 'E' || this.currentChar == 'e'))
                        {
                            this.state = 4;
                        }
                        else if (this.state == 4 && (this.currentChar == '-' || this.currentChar == '+'))
                        {
                            this.state = 6;
                        }
                        else if (this.state == 4 && this.currentChar > '/' && this.currentChar < ':')
                        {
                            this.state = 5;
                        }
                        else if (this.state == 5 && this.currentChar > '/' && this.currentChar < ':')
                        {
                            continue;
                        }
                        else if (this.state == 6)
                        {
                            if (this.currentChar > '/' && this.currentChar < ':')
                            {
                                this.state = 5;
                                continue;
                            }
                            else
                            {
                                return Components.Json.JsonTokenType.Unknown;
                            }
                        }
                        else if (this.state == 1 || this.state == 3 || this.state == 5)
                        {
                            this.charIndex--;

                            return Components.Json.JsonTokenType.Number;
                        }
                        else
                        {
                            break;
                        }
                    }
                    while (this.NextChar());



                    break;

            }

            return Components.Json.JsonTokenType.Unknown;
        }
    }


    return Components.Json.JsonTokenType.EndOfFile;
};

Components.Json.JsonLexer.prototype.GetTokens = function() {
    var tokenType;
    var lastIndex = -1;
    var tokens = [];
    this.charIndex = -1;

    while ((tokenType = this.GetToken()) != Components.Json.JsonTokenType.EndOfFile)
    {
        var index = lastIndex + 1;        
        var lexeme = this.Text.substring(index, this.charIndex + 1);

        if (tokenType != Components.Json.JsonTokenType.WhiteSpace)
        {
            tokens.push(new Components.Json.JsonToken(tokenType, lexeme, index));
        }
        
        lastIndex = this.charIndex;
    }

    return tokens;
};