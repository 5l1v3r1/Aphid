#'Testing\\Benchmark';

var count = 250000;

_b = macro(@(n, e) { benchmark(n, count, @{ var x = [ 1, 2, 8, 10, 100 ] }, @{ e }) });
_b2 = macro(@(n, e) { benchmark(n, count / 5, @{ var x = [ 1, 2, 8, 10, 100 ] }, @{ e }) });
_b3 = macro(@(n, e) { benchmark(n, count / 20, @{ var x = [ 1, 2, 8, 10, 100 ] }, @{ e }) });
_b4 = macro(@(n, e) { benchmark(n, count / 50, @{ using System.Linq; var x = [ 1, 2, 8, 10, 100 ] }, @{ e |> Enumerable.ToArray }) });

_b('list get', x[4]);
_b('list set', x[4] = 0x10);
_b3('list select', x->@() $_ + 1);
_b3('list select partial op', x->@+ 1);
_b4('list where', x-?@() ($_ & 1) == 0);
_b4('list where partial op', x-?@!= 8);

/* Begin Version Issues */
//_b4('list group', x-&@() $_ & 1);
//_b4('list group partial op', x-&@!= 8);
//_b4('list order', x-\@() $_ & 1);
//_b4('list order partial op', x-\@!= 8);
//_b4('list order desc', x-/@() $_ & 1);
//_b4('list order desc partial op', x-/@!= 8);
//_b('list count', x #!);
/* End Version Issues */

_b2('list distinct', x!?);

/* Begin Version Issues */
//_b('list first', x^!);
//_b('list last', x$!);
/* End Version Issues */