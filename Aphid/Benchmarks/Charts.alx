#'Gui\\WinForms';
#'Charts.Config';
using Components.ObjectDatabase;
using System.Reflection;
using Components.Aphid.Parser;

AppDomain.CurrentDomain.add_AssemblyResolve(@(sender, e){
    ret e.Name.StartsWith('Components.Aphid') ? AphidExpression.Assembly : null;
});

var chart = winForms.chart();
var area3d = chart.area().Area3DStyle;
area3d.Enable3D = true;
area3d.Inclination = 25;
area3d.IsRightAngleAxes = false;
area3d.Perspective = 5;
area3d.PointDepth = 50;
area3d.Rotation = 45;
area3d.WallWidth = 5;
area3d.LightStyle = LightStyle.Realistic;

var tickMode = { normal: 0, sum: 1, average: 2 };
var mode = tickMode.normal;

#'std';

var l = {};

using (var db = 'history.db' |> BinaryObjectDatabase.OpenFile) {
    var flattened =
        (var r = db.ReadUnsafe)()
        -<(@(x) x.results -> @(y) ({ version: new Version(x.version), name: y.name, ticks: y.ticks }))
        -?((@.name) @> testNames.contains);

    var fullRuns = flattened-&(@.version)-&(@()$_-&@.name#!)-/@.Key^!->@.Key;

    flattened
    -? (@(x) fullRuns=?@==x.version)
    -& @.name
    -> @(s){
        var i = 0x0;
        var data = ($(mode)
            tickMode.average: (s
                -& (@.version)
                -\ (@.Key)
                -> (@(g) [ i++, (g -> @.ticks +> (@(a, b) a + b)) / (g #!), g.Key ])),
            tickMode.sum: (s
                -& (@.version)
                -\ (@.Key)
                -> (@(g) [ i++, (g -> @.ticks +> (@(a, b) a + b)), g.Key ])),
            (s
                -\ (@.version)
                -> (@() [ i++, $_.ticks, $_.version ])));
    
        l[s.Key] = data;
        Console.WriteLine('{0}: {1}', s.Key, data #!);

        data @() chart.series(s.Key, $_, SeriesChartType.StackedBar);
    };
}

//l |> serialize @File.WriteAllText('c:\\temp\\dat.alx');

winForms.split([
    [ { control: winForms.propertyGrid(chart), absolute: 250 }, { control: chart } ]
])
@winForms.dialog({ width: 900, height: 400 });

