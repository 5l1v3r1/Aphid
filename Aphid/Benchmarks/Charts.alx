#'winForms';
using Components.ObjectDatabase;
using System.Reflection;
using Components.Aphid.Parser;

AppDomain.CurrentDomain.add_AssemblyResolve(@(sender, e){
    ret e.Name == 'Components.Aphid' ? AphidExpression.Assembly : null;
});

var db = 'history.db' |> BinaryObjectDatabase.OpenFile;
var chart = winForms.chart();

var area3d = chart.area().Area3DStyle;
area3d.Enable3D = true;
area3d.Inclination = 25;
area3d.IsRightAngleAxes = false;
area3d.Perspective = 5;
area3d.PointDepth = 50;
area3d.Rotation = 45;
area3d.WallWidth = 5;
area3d.LightStyle = LightStyle.Realistic;

db.ReadUnsafe()
-< (@(x) x.results -> @(y) ({ version: new Version(x.version), name: y.name, ticks: y.ticks }))
-& @.name
-> @(s){
    var i = 0;
    s -\ @.version
    -> (@() [ i, $_.ticks ])
    @() chart.series(s.Key, $_, SeriesChartType.StackedBar);
};

winForms.split([
    [ { control: winForms.propertyGrid(chart), absolute: 250 }, { control: chart } ]
])
@winForms.dialog({ width: 900, height: 400 });

